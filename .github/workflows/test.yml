name: Run full test suite, except backend
on:
  - push
  - pull_request
jobs:

  test-suite:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install --yes --no-install-recommends \
          build-essential genisoimage qemu-kvm cpu-checker libvirt-daemon-system \
          python-is-python3 python3-pip python3-dev python3-venv libc-dev pkg-config \
          dnsmasq libguestfs-tools libguestfs-dev libvirt-dev
          python --version
          pip cache list
          pip install -U poetry
          python -m venv --system-site-packages .env && source .env/bin/activate
          pip install -U pip
          poetry install --with test,dev --extras=libvirt
      - name: Run test suite
        run: |
          source .env/bin/activate
          mkdir .mypy_cache
          make test-all

  build-docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies and prepare environment
        run: |
          python -m venv --system-site-packages .env && source .env/bin/activate
          pip install -U poetry
          poetry install --only=docs
      - name: Build docs
        run: |
          source .env/bin/activate
          sphinx-build -W -b html docs/source public
      - name: Fix permissions
        run: |
          chmod -c -R +rX "public/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  publish-docs:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/devel'
    needs: build-docs
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action
